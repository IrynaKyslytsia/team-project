{"mappings":"AAAC,IAASA,EAAG,mBAAHA,EAA6XC,OAAOC,QAAQC,WAApXC,UAAUJ,EAAEI,QAAQJ,EAAEK,mBAAmBL,EAAEM,oBAAoBN,EAAEO,uBAAuB,SAASC,GAAG,IAAI,IAAIC,EAAEC,KAAKC,GAAGF,EAAEG,UAAUH,EAAEI,eAAeC,iBAAiBN,GAAGO,EAAE,EAAEJ,EAAEI,IAAIJ,EAAEI,KAAKN,KAAKM,EAAE,OAAOC,QAAQL,EAAEI,G,GAAM,mBAAmBf,EAAEiB,UAAUjB,EAAEiB,QAAQ,SAAST,GAAG,IAAI,IAAIC,EAAEC,KAAKD,GAAG,IAAIA,EAAES,UAAU,CAAC,GAAGT,EAAEL,QAAQI,GAAG,OAAOC,EAAEA,EAAEA,EAAEU,U,CAAW,OAAO,I,GAG/XP,SAASQ,iBAAiB,oBAAoB,W,kDAIvCC,EAAeT,SAASU,cAAiB,qBACzCC,EAAuBX,SAACE,iBAAc,mBAI1CU,EAAAC,SAA8B,SACRC,GAEnBA,EAAAN,iBAAA,kBACIZ,G,yDASaI,SAAKU,cAAa,sBAChBK,EAAS,M,wBAMMN,EAARO,UAAVC,IAAJ,S,OAM4BN,EAAbE,SAAR,SAATC,GAE2BA,EAALN,iBAAjB,SAAT,SAATZ,GACmBE,KAALO,QAAR,UAEmBW,UAAVE,OAAP,UAC6BT,EAARO,UAAVE,OAAP,S,OAM8BlB,SAATmB,KAALX,iBAAjB,SAAT,SAAAZ,GAGyB,IAFCA,EAAFwB,UAIQpB,SAATU,cAAd,iBAAXM,UAAUE,OAAO,UACiBlB,SAATU,cAAd,YAAZM,UAAME,OAAO,U,IAE2B,GAGGT,EAARD,iBAAjB,SAAT,WAC8BR,SAATU,cAAd,iBAAjBM,UAAQE,OAAO,UACyBpB,KAALkB,UAAVE,OAAP,S,OC/DlB,MACC,MAAMG,EAAarB,SAASU,cAAc,sBACpCY,EAActB,SAASU,cAAc,iBACrCa,EAAevB,SAASU,cAAc,kBACtCc,EAAgBxB,SAASE,iBAAiB,kBAC1CuB,EAAYzB,SAASU,cAAc,oBAGnCgB,EAAa,KACjB,MAAMC,EAC0C,SAA9CL,EAAYM,aAAa,mBAA+B,EAC1DN,EAAYO,aAAa,iBAAkBF,GAC3CN,EAAWL,UAAUc,OAAO,WAK5BC,eAH0BJ,EAEtB,mBADA,qBAE6B3B,SAASmB,KAAK,EAEjDK,EAAcX,SAAQC,GAAQA,EAAKN,iBAAiB,QAASkB,KAC7DD,EAAUjB,iBAAiB,QAASkB,GACpCJ,EAAYd,iBAAiB,QAASkB,GACtCH,EAAaf,iBAAiB,QAASkB,GAGvCrC,OAAO2C,WAAW,sBAAsBxB,iBAAiB,UAAUZ,IAC5DA,EAAEJ,UACP6B,EAAWL,UAAUE,OAAO,WAC5BI,EAAYO,aAAa,iBAAiB,GAC1CE,eAAeE,iBAAiBjC,SAASmB,MAAK,GAEjD,EA/BA,GC6CG9B,OAAOmB,iBAAiB,QA1CxB,WACI,MAAM0B,EAAWlC,SAASE,iBAAiB,kCACvCgC,GACAA,EAASrB,SAAQsB,IACb,IAAIC,EAAaD,EAAOzB,cAAc,sBACzB,IAAI2B,OAAOF,EAAOzB,cAAc,WAAY,CACrD4B,MAAO,KACPC,gBAAgB,EAChBC,SAAU,CACNC,MAAO,IACPC,sBAAsB,GAE1BC,cAAe,EACfC,aAAc,GACdR,WAAY,CACRS,GAAIT,EACJU,WAAW,EACXC,aAAc,SAAUC,EAAOC,GAC3B,MAAO,cAAgBA,EAAY,S,GAG3CC,GAAI,CACAC,gBAAiB,WACb,IAAIC,EAAgBtD,KAAKsD,cACrBC,EAAgBlB,EAAOmB,uBAAuB,gBAAgBF,GAC9DC,GACAE,YAAW,WACPF,EAAcrC,UAAUE,OAAO,U,GAChC,I,EAGXsC,cAAe,WACX,IAAIC,EAAc3D,KAAK2D,YACLtB,EAAOmB,uBAAuB,gBAAgBG,GACpDzC,UAAUC,IAAI,U,IAIpC,G,IAIgC","sources":["src/js/modal.js","src/js/mobile-menu.js","src/js/slider.js"],"sourcesContent":["!function(e){\"function\"!=typeof e.matches&&(e.matches=e.msMatchesSelector||e.mozMatchesSelector||e.webkitMatchesSelector||function(e){for(var t=this,o=(t.document||t.ownerDocument).querySelectorAll(e),n=0;o[n]&&o[n]!==t;)++n;return Boolean(o[n])}),\"function\"!=typeof e.closest&&(e.closest=function(e){for(var t=this;t&&1===t.nodeType;){if(t.matches(e))return t;t=t.parentNode}return null})}(window.Element.prototype);\n\n\ndocument.addEventListener('DOMContentLoaded', function() {\n\n   /* Записываем в переменные массив элементов-кнопок и подложку.\n      Подложке зададим id, чтобы не влиять на другие элементы с классом overlay*/\n   var modalButtons = document.querySelectorAll('.js-open-modal'),\n       overlay      = document.querySelector('.js-overlay-modal'),\n       closeButtons = document.querySelectorAll('.js-modal-close');\n\n\n   /* Перебираем массив кнопок */\n   modalButtons.forEach(function(item){\n\n      /* Назначаем каждой кнопке обработчик клика */\n      item.addEventListener('click', function(e) {\n\n         /* Предотвращаем стандартное действие элемента. Так как кнопку разные\n            люди могут сделать по-разному. Кто-то сделает ссылку, кто-то кнопку.\n            Нужно подстраховаться. */\n         e.preventDefault();\n\n         /* При каждом клике на кнопку мы будем забирать содержимое атрибута data-modal\n            и будем искать модальное окно с таким же атрибутом. */\n         var modalId = this.getAttribute('data-modal'),\n             modalElem = document.querySelector('.modal[data-modal=\"' + modalId + '\"]');\n\n\n         /* После того как нашли нужное модальное окно, добавим классы\n            подложке и окну чтобы показать их. */\n         modalElem.classList.add('active');\n         overlay.classList.add('active');\n      }); // end click\n\n   }); // end foreach\n\n\n   closeButtons.forEach(function(item){\n\n      item.addEventListener('click', function(e) {\n         var parentModal = this.closest('.modal');\n\n         parentModal.classList.remove('active');\n         overlay.classList.remove('active');\n      });\n\n   }); // end foreach\n\n\n    document.body.addEventListener('keyup', function (e) {\n        var key = e.keyCode;\n\n        if (key == 27) {\n\n            document.querySelector('.modal.active').classList.remove('active');\n            document.querySelector('.overlay').classList.remove('active');\n        };\n    }, false);\n\n\n    overlay.addEventListener('click', function() {\n        document.querySelector('.modal.active').classList.remove('active');\n        this.classList.remove('active');\n    });\n\n\n\n\n}); // end ready","(() => {\n  const mobileMenu = document.querySelector('.js-menu-container');\n  const openMenuBtn = document.querySelector('.js-open-menu');\n  const closeMenuBtn = document.querySelector('.js-close-menu');\n  const closeMenuLink = document.querySelectorAll('.nav-mob__link');\n  const buyNowBtn = document.querySelector('.btn__open-modal');\n\n\n  const toggleMenu = () => {\n    const isMenuOpen =\n      openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n    openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n    mobileMenu.classList.toggle('is-open');\n\n    const scrollLockMethod = !isMenuOpen\n      ? 'disableBodyScroll'\n      : 'enableBodyScroll';\n    bodyScrollLock[scrollLockMethod](document.body);\n  };\n  closeMenuLink.forEach(item => item.addEventListener(\"click\", toggleMenu));\n  buyNowBtn.addEventListener(\"click\", toggleMenu);\n  openMenuBtn.addEventListener('click', toggleMenu);\n  closeMenuBtn.addEventListener('click', toggleMenu);\n\n  // Close the mobile menu on wider screens if the device orientation changes\n  window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n    if (!e.matches) return;\n    mobileMenu.classList.remove('is-open');\n    openMenuBtn.setAttribute('aria-expanded', false);\n    bodyScrollLock.enableBodyScroll(document.body);\n  });\n}) ();\n\n\n","(() => {\n    \n\n    function swiperSlider() {\n        const heroMain = document.querySelectorAll('[data-slider=\"reviews-slider\"]');\n        if (heroMain) {\n            heroMain.forEach(slider => {\n                let pagination = slider.querySelector('.swiper-pagination');\n                let swiper = new Swiper(slider.querySelector('.swiper'), {\n                    speed: 1500,\n                    centeredSlides: true,\n                    autoplay: {\n                        delay: 3000,\n                        disableOnInteraction: false,\n                    },\n                    slidesPerView: 1,\n                    spaceBetween: 20,\n                    pagination: {\n                        el: pagination,\n                        clickable: true,\n                        renderBullet: function (index, className) {\n                            return '<li class=\"' + className + '\"></li>';\n                        },\n                    },\n                    on: {\n                        transitionStart: function () {\n                            let previousIndex = this.previousIndex;\n                            let previousSlide = slider.getElementsByClassName('swiper-slide')[previousIndex];\n                            if (previousSlide) {\n                                setTimeout(function () {\n                                    previousSlide.classList.remove('is-play');\n                                }, 1000);\n                            }\n                        },\n                        transitionEnd: function () {\n                            let activeIndex = this.activeIndex;\n                            let activeSlide = slider.getElementsByClassName('swiper-slide')[activeIndex];\n                            activeSlide.classList.add('is-play');\n                        },\n                    }\n\n                });\n            });\n        }\n    }\n    window.addEventListener('load', swiperSlider, false);\n})();"],"names":["e1","window","Element","prototype","matches","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","e","t","this","o","document","ownerDocument","querySelectorAll","n","Boolean","closest","nodeType","parentNode","addEventListener","overlay","querySelector","closeButtons","modalButtons","forEach","item","modalId","classList","add","remove","body","keyCode","mobileMenu","openMenuBtn","closeMenuBtn","closeMenuLink","buyNowBtn","toggleMenu","isMenuOpen","getAttribute","setAttribute","toggle","bodyScrollLock","matchMedia","enableBodyScroll","heroMain","slider","pagination","Swiper","speed","centeredSlides","autoplay","delay","disableOnInteraction","slidesPerView","spaceBetween","el","clickable","renderBullet","index","className","on","transitionStart","previousIndex","previousSlide","getElementsByClassName","setTimeout","transitionEnd","activeIndex"],"version":3,"file":"index.9ab3e231.js.map"}